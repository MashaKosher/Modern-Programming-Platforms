// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Todo –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
// –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node test-database.cjs
// –ù–µ —Ç—Ä–µ–±—É–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞

const Database = require('./server/src/database/database.js');

console.log('üóÑÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Todo –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...\n');

const db = new Database();

// –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
setTimeout(() => {
    console.log('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ...\n');

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    db.db.get('SELECT COUNT(*) as count FROM users', (err, row) => {
        if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', err.message);
        } else {
            console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ: ${row.count}`);
        }
    });

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞—á–∏
    db.db.get('SELECT COUNT(*) as count FROM tasks', (err, row) => {
        if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞—á:', err.message);
        } else {
            console.log(`üìù –ó–∞–¥–∞—á –≤ —Å–∏—Å—Ç–µ–º–µ: ${row.count}`);
        }
    });

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    db.db.get(`
        SELECT
            COUNT(*) as total,
            SUM(CASE WHEN completed = 1 THEN 1 ELSE 0 END) as completed,
            SUM(CASE WHEN completed = 0 THEN 1 ELSE 0 END) as active
        FROM tasks
    `, (err, row) => {
        if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', err.message);
        } else {
            console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–¥–∞—á:`);
            console.log(`   - –í—Å–µ–≥–æ: ${row.total}`);
            console.log(`   - –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö: ${row.completed}`);
            console.log(`   - –ê–∫—Ç–∏–≤–Ω—ã—Ö: ${row.active}`);
        }
    });

    // 4. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏
    db.db.all(`
        SELECT t.*, u.username
        FROM tasks t
        LEFT JOIN users u ON t.userId = u.id
        ORDER BY t.createdAt DESC
    `, (err, rows) => {
        if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á:', err.message);
        } else {
            console.log(`\nüìã –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á (${rows.length}):`);
            if (rows.length > 0) {
                rows.forEach((task, index) => {
                    const status = task.completed ? '‚úÖ' : '‚è≥';
                    const dueDate = task.dueDate ? ` (–¥–æ ${new Date(task.dueDate).toLocaleDateString()})` : '';
                    console.log(`   ${index + 1}. ${status} ${task.title}${dueDate}`);
                    console.log(`      –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${task.username} (ID: ${task.userId})`);
                });
            } else {
                console.log('   –ù–µ—Ç –∑–∞–¥–∞—á –≤ —Å–∏—Å—Ç–µ–º–µ');
            }
        }
    });

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ö–µ–º—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    console.log(`\nüìã –°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:`);
    db.db.all("SELECT name FROM sqlite_master WHERE type='table'", (err, tables) => {
        if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ö–µ–º—ã:', err.message);
        } else {
            tables.forEach(table => {
                console.log(`   - –¢–∞–±–ª–∏—Ü–∞: ${table.name}`);
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü—ã
                db.db.all(`PRAGMA table_info(${table.name})`, (err, columns) => {
                    if (!err && columns) {
                        console.log(`     –ö–æ–ª–æ–Ω–∫–∏: ${columns.map(col => col.name).join(', ')}`);
                    }
                });
            });
        }
    });

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    setTimeout(() => {
        db.close();
        console.log(`\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!`);
        console.log(`\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:`);
        console.log(`   - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`);
        console.log(`   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ –∑–∞–¥–∞—á–∏ —Å–æ–∑–¥–∞–Ω—ã`);
        console.log(`   - –°–∏—Å—Ç–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤–∞`);
        console.log(`   \nüìù –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:`);
        console.log(`   1. cd server && npm run dev (–ø–æ—Ä—Ç 3001)`);
        console.log(`   2. npm run dev (–ø–æ—Ä—Ç 5173)`);
        console.log(`   3. –û—Ç–∫—Ä—ã—Ç—å http://localhost:5173`);
    }, 2000);

}, 2000);
